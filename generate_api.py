# ava-python : A Python implementation of the AVA API
# Author: https://github.com/zefonseca/
# License MIT

# Generates the Python client API from spec2py AST

import spec2py
from datetime import datetime
from pprint import pprint

API_META_FILE = "apimeta.py"


def write_apimeta(api):    
    nowstr = str(datetime.now())
    lpe = list_packages_endpoints(api)
    dikt = spec2py.render_dict(api)
    header = get_header()
    with open(API_META_FILE, "w+") as f:
        f.write(header)
        f.write("\n")
        f.write("# Auto generated by generate_api.py\n")
        f.write("# On {}\n".format(nowstr))
        f.write("\n\n")
        f.write("api_endpoints = ")
        pprint(lpe, f)
        f.write("\n\n")
        f.write("api_meta = ")
        pprint(dikt, f)
        f.close()


def list_packages_endpoints(api):

    pe = {}

    for endpoint in api.endpoints:
        for mth in endpoint.methods:        
            pe[mth.package] = endpoint.endpoint

    return pe


def get_header():

    header = ""

    with open(__file__, "r") as f:
        lin = f.readline()
        while len(lin.strip()) > 0:
            header += lin
            lin = f.readline()

    return header


if __name__ == "__main__":
    api = spec2py.parse_api(spec2py.SPEC_FILE, spec2py.GRAMMAR_FILE)
    write_apimeta(api)    